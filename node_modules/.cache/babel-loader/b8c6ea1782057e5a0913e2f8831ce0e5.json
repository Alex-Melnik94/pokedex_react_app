{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\naxios.defaults.baseURL = 'https://pokeapi.co/api/v2';\nconst getAllPokemons = createAsyncThunk('pokedex/getAllPokemons', async (_, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await axios.get('/pokemon?limit=60&offset=60');\n    const pokemonDetails = Promise.all(data.results.map(async pokemon => {\n      const pokeDetail = await axios.get(`/pokemon/${pokemon.name}`);\n      return pokeDetail.data;\n    }));\n    return pokemonDetails;\n  } catch (error) {\n    toast.error('Error');\n    return thunkAPI.rejectWithValue();\n  }\n});\nconst getAllTypes = createAsyncThunk('pokedex/getAllTypes', async (_, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await axios.get('/type');\n    return data.results;\n  } catch (error) {\n    toast.error('Error');\n    return thunkAPI.rejectWithValue();\n  }\n});\nconst getPokemonsByType = createAsyncThunk('pokedex/getPokemonsByType', async (typeName, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await axios.get(`type/${typeName}`); // console.log('data.pokemon', data.pokemon);\n\n    const pokemonDetails = await Promise.all(data.pokemon.map(async pokemon => {\n      const pokeDetail = await axios.get(`/pokemon/${pokemon.pokemon.name}`);\n      console.log('pokeDetail.data', pokeDetail.data);\n      return pokeDetail.data;\n    }));\n    console.log('pokemonDetails', pokemonDetails);\n    return pokemonDetails;\n  } catch (error) {\n    toast.error('Error');\n    return thunkAPI.rejectWithValue();\n  }\n});\nconst pokedexOperations = {\n  getAllPokemons,\n  getAllTypes,\n  getPokemonsByType\n};\nexport default pokedexOperations;","map":{"version":3,"sources":["/Users/oleksandr/Projects/pokedex/pokedex_react_app/src/redux/Pokedex/PokedexOperations.js"],"names":["axios","createAsyncThunk","toast","defaults","baseURL","getAllPokemons","_","thunkAPI","data","get","pokemonDetails","Promise","all","results","map","pokemon","pokeDetail","name","error","rejectWithValue","getAllTypes","getPokemonsByType","typeName","console","log","pokedexOperations"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;AAEA,MAAMC,cAAc,GAAGJ,gBAAgB,CAAC,wBAAD,EAA2B,OAAOK,CAAP,EAAUC,QAAV,KAAuB;AACvF,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,GAAN,CAAU,6BAAV,CAAvB;AACA,UAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CACnBJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiB,MAAOC,OAAP,IAAmB;AAChC,YAAMC,UAAU,GAAG,MAAMhB,KAAK,CAACS,GAAN,CAAW,YAAWM,OAAO,CAACE,IAAK,EAAnC,CAAzB;AACA,aAAOD,UAAU,CAACR,IAAlB;AACH,KAHD,CADmB,CAAvB;AAMA,WAAQE,cAAR;AAED,GAVD,CAUE,OAAOQ,KAAP,EAAc;AACdhB,IAAAA,KAAK,CAACgB,KAAN,CAAY,OAAZ;AACA,WAAOX,QAAQ,CAACY,eAAT,EAAP;AACD;AACF,CAfsC,CAAvC;AAiBA,MAAMC,WAAW,GAAGnB,gBAAgB,CAAC,qBAAD,EAAwB,OAAOK,CAAP,EAAUC,QAAV,KAAuB;AAC/E,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,GAAN,CAAU,OAAV,CAAvB;AACA,WAAOD,IAAI,CAACK,OAAZ;AACH,GAHD,CAGE,OAAOK,KAAP,EAAc;AACZhB,IAAAA,KAAK,CAACgB,KAAN,CAAY,OAAZ;AACA,WAAOX,QAAQ,CAACY,eAAT,EAAP;AACH;AACJ,CARmC,CAApC;AAUA,MAAME,iBAAiB,GAAGpB,gBAAgB,CAAC,2BAAD,EAA8B,OAAOqB,QAAP,EAAiBf,QAAjB,KAA8B;AAClG,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,GAAN,CAAW,QAAOa,QAAS,EAA3B,CAAvB,CADA,CAEA;;AAEA,UAAMZ,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAR,CACzBJ,IAAI,CAACO,OAAL,CAAaD,GAAb,CAAiB,MAAOC,OAAP,IAAmB;AAChC,YAAMC,UAAU,GAAG,MAAMhB,KAAK,CAACS,GAAN,CAAW,YAAWM,OAAO,CAACA,OAAR,CAAgBE,IAAK,EAA3C,CAAzB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BR,UAAU,CAACR,IAA1C;AACA,aAAOQ,UAAU,CAACR,IAAlB;AACH,KAJD,CADyB,CAA7B;AAOAe,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bd,cAA9B;AAEA,WAAOA,cAAP;AACH,GAdD,CAcE,OAAOQ,KAAP,EAAc;AACZhB,IAAAA,KAAK,CAACgB,KAAN,CAAY,OAAZ;AACA,WAAOX,QAAQ,CAACY,eAAT,EAAP;AACH;AACJ,CAnByC,CAA1C;AAqBA,MAAMM,iBAAiB,GAAG;AACtBpB,EAAAA,cADsB;AAEtBe,EAAAA,WAFsB;AAGtBC,EAAAA;AAHsB,CAA1B;AAMA,eAAeI,iBAAf","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://pokeapi.co/api/v2';\n\nconst getAllPokemons = createAsyncThunk('pokedex/getAllPokemons', async (_, thunkAPI) => {\n  try {\n    const { data } = await axios.get('/pokemon?limit=60&offset=60');\n    const pokemonDetails = Promise.all(\n        data.results.map(async (pokemon) => {\n            const pokeDetail = await axios.get(`/pokemon/${pokemon.name}`)\n            return pokeDetail.data\n        })\n    )  \n    return  pokemonDetails\n\n  } catch (error) {\n    toast.error('Error');\n    return thunkAPI.rejectWithValue();\n  }\n});\n\nconst getAllTypes = createAsyncThunk('pokedex/getAllTypes', async (_, thunkAPI) => {\n    try {\n        const { data } = await axios.get('/type')\n        return data.results\n    } catch (error) {\n        toast.error('Error');\n        return thunkAPI.rejectWithValue(); \n    }\n})\n\nconst getPokemonsByType = createAsyncThunk('pokedex/getPokemonsByType', async (typeName, thunkAPI) => {\n    try {\n        const { data } = await axios.get(`type/${typeName}`)\n        // console.log('data.pokemon', data.pokemon);\n\n        const pokemonDetails = await Promise.all(\n            data.pokemon.map(async (pokemon) => {\n                const pokeDetail = await axios.get(`/pokemon/${pokemon.pokemon.name}`)\n                console.log('pokeDetail.data', pokeDetail.data);\n                return pokeDetail.data\n            })\n        )\n        console.log('pokemonDetails', pokemonDetails);\n\n        return pokemonDetails\n    } catch (error) {\n        toast.error('Error');\n        return thunkAPI.rejectWithValue(); \n    }\n})\n\nconst pokedexOperations = {\n    getAllPokemons,\n    getAllTypes,\n    getPokemonsByType\n};\n\nexport default pokedexOperations;"]},"metadata":{},"sourceType":"module"}